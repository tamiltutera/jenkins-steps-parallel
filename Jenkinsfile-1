pipeline {
  agent none
  stages {
    stage('build') {
      parallel {
        stage('windows') {
          agent {label 'windows'}
          steps {
            powershell '$psversiontable'
          }
        }
        stage('ansible') {
          agent {label 'ansible'}
          steps {
            sh 'ansible --version'
          }
        }
        stage('docker') {
          agent {label 'docker'}
          steps {
            sh 'docker images'
          }
        }
      }
    }
    stage('run') {
      parallel {
        stage('windows') {
          agent {label 'windows'}
          steps {
            powershell ' Get-Service | Where-Object { $_.status -eq "Running" }'
          }
        }
        stage('ansible') {
          agent {label 'ansible'}
          steps {
            sh 'ansible -m setup localhost -a "filter=ansible_distribution"'
          }
        }
        stage('docker') {
          agent {label 'docker'}
          steps {
            sh 'docker pull httpd'
          }
        }
      }
    }
  }
}